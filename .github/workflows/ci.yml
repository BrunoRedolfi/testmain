name: Java CI and Docker Publish

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  APP_NAME: "testmain"
  JAR_NAME: "app.jar"

jobs:
  build-test-and-publish:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Make gradlew executable
      run: chmod +x gradlew

    - name: Wait for MySQL
      run: |
        for i in {1..10}; do
          nc -z localhost 3306 && break
          sleep 5
          echo "Waiting for MySQL... Attempt $i/10"
        done

    # Construir la aplicaci√≥n
    - name: Build application
      run: |
        ./gradlew clean bootJar --info
        ls -la build/libs/ # Verifica que el JAR existe

    # Ejecutar tests
    - name: Run tests
      run: ./gradlew test --info --stacktrace
      env:
        SPRING_PROFILES_ACTIVE: test

    # Configurar Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Construir y publicar imagen Docker
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name == 'push' }}  # Solo push en eventos de push
        tags: |
          ghcr.io/${{ github.repository_owner | lower }}/${{ env.APP_NAME }}:latest
          ghcr.io/${{ github.repository_owner | lower }}/${{ env.APP_NAME }}:${{ github.sha }}
