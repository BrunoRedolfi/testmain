name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  SPRING_PROFILES_ACTIVE: test  # Usamos test para H2 en CI
  APP_NAME: testmain  # Nombre en minÃºsculas para Docker

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Make gradlew executable
      run: chmod +x gradlew

    - name: Wait for MySQL to be ready
      run: |
        for i in {1..10}; do
          nc -z localhost 3306 && break
          sleep 5
          echo "Waiting for MySQL... Attempt $i/10"
        done

    - name: Build application JAR
      run: ./gradlew clean bootJar --info

    - name: Run tests
      run: ./gradlew test --info --stacktrace
      env:
        SPRING_PROFILES_ACTIVE: test  # Fuerza H2 para tests

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          build/test-results/**/*.xml
          build/reports/tests/**/*

    - name: Upload application JAR
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: application-jar
        path: build/libs/app.jar  # Nombre exacto del archivo
